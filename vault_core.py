import os
import json
import click
from cryptography.fernet import Fernet
from datetime import datetime

class Vault:
    def __init__(self, key_file='key.key', db_file='vault.enc'):
        self.key_file = key_file
        self.db_file = db_file
        self.fernet = Fernet(self.load_key())

    def generate_key(self):
        """–ì–µ–Ω–µ—Ä—É—î –Ω–æ–≤–∏–π –∫–ª—é—á —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è"""
        key = Fernet.generate_key()
        with open(self.key_file, 'wb') as f:
            f.write(key)
        click.echo("üîë –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤–∏–π –∫–ª—é—á —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è")

    def load_key(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –∫–ª—é—á —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –∞–±–æ —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π"""
        if not os.path.exists(self.key_file):
            self.generate_key()
        with open(self.key_file, 'rb') as f:
            return f.read()

    def load_db(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ç–∞ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤—É—î –±–∞–∑—É –¥–∞–Ω–∏—Ö"""
        if not os.path.exists(self.db_file):
            return {}
        try:
            with open(self.db_file, 'rb') as f:
                data = self.fernet.decrypt(f.read())
                return json.loads(data)
        except Exception as e:
            click.echo(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –±–∞–∑–∏: {e}")
            return {}

    def save_db(self, data):
        """–®–∏—Ñ—Ä—É—î —Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—î –±–∞–∑—É –¥–∞–Ω–∏—Ö"""
        try:
            encrypted = self.fernet.encrypt(json.dumps(data, ensure_ascii=False, indent=2).encode('utf-8'))
            with open(self.db_file, 'wb') as f:
                f.write(encrypted)
        except Exception as e:
            click.echo(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ: {e}")

    def backup(self, backup_file):
        """–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é (–Ω–µ–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—É)"""
        db = self.load_db()
        if not db:
            click.echo("üì≠ –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è")
            return
        try:
            with open(backup_file, 'w', encoding='utf-8') as f:
                json.dump(db, f, ensure_ascii=False, indent=2)
            click.echo(f"üíæ –†–µ–∑–µ—Ä–≤–Ω—É –∫–æ–ø—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤: {backup_file}")
            click.echo("‚ö†Ô∏è  –£–í–ê–ì–ê: –§–∞–π–ª –Ω–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π! –í–∏–¥–∞–ª—ñ—Ç—å –ø—ñ—Å–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.")
        except Exception as e:
            click.echo(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤–Ω–æ—ó –∫–æ–ø—ñ—ó: {e}")
